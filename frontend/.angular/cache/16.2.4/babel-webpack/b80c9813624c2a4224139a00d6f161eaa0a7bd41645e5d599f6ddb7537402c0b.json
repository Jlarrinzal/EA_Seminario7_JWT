{"ast":null,"code":"import * as i0 from \"@angular/core\";\nimport * as i1 from \"./services/auth.service\";\nimport * as i2 from \"@angular/router\";\nexport class AuthGuard {\n  constructor(authService, router) {\n    this.authService = authService;\n    this.router = router;\n  }\n  canActivate() {\n    if (this.authService.loggedIn()) {\n      return true;\n    }\n    this.router.navigate(['/signin']);\n    return false;\n  }\n  static #_ = this.ɵfac = function AuthGuard_Factory(t) {\n    return new (t || AuthGuard)(i0.ɵɵinject(i1.AuthService), i0.ɵɵinject(i2.Router));\n  };\n  static #_2 = this.ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({\n    token: AuthGuard,\n    factory: AuthGuard.ɵfac,\n    providedIn: 'root'\n  });\n}","map":{"version":3,"names":["AuthGuard","constructor","authService","router","canActivate","loggedIn","navigate","_","i0","ɵɵinject","i1","AuthService","i2","Router","_2","factory","ɵfac","providedIn"],"sources":["C:\\Users\\sorex\\Desktop\\Visual Code\\Sem7_JWT\\SEM-7-JWT-ANGULAR\\frontend\\src\\app\\auth.guard.ts"],"sourcesContent":["import { Injectable } from '@angular/core';\r\nimport { CanActivate} from '@angular/router';\r\nimport { AuthService } from './services/auth.service';\r\nimport {Router} from '@angular/router'; \r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class AuthGuard implements CanActivate {\r\n\r\n  constructor(\r\n    private authService: AuthService,\r\n    private router: Router\r\n  ) { }\r\n  canActivate(): boolean {\r\n    if (this.authService.loggedIn()) {\r\n      return true;\r\n    }\r\n    this.router.navigate(['/signin']);\r\n    return false;\r\n  }\r\n\r\n} "],"mappings":";;;AAQA,OAAM,MAAOA,SAAS;EAEpBC,YACUC,WAAwB,EACxBC,MAAc;IADd,KAAAD,WAAW,GAAXA,WAAW;IACX,KAAAC,MAAM,GAANA,MAAM;EACZ;EACJC,WAAWA,CAAA;IACT,IAAI,IAAI,CAACF,WAAW,CAACG,QAAQ,EAAE,EAAE;MAC/B,OAAO,IAAI;;IAEb,IAAI,CAACF,MAAM,CAACG,QAAQ,CAAC,CAAC,SAAS,CAAC,CAAC;IACjC,OAAO,KAAK;EACd;EAAC,QAAAC,CAAA,G;qBAZUP,SAAS,EAAAQ,EAAA,CAAAC,QAAA,CAAAC,EAAA,CAAAC,WAAA,GAAAH,EAAA,CAAAC,QAAA,CAAAG,EAAA,CAAAC,MAAA;EAAA;EAAA,QAAAC,EAAA,G;WAATd,SAAS;IAAAe,OAAA,EAATf,SAAS,CAAAgB,IAAA;IAAAC,UAAA,EAFR;EAAM"},"metadata":{},"sourceType":"module","externalDependencies":[]}